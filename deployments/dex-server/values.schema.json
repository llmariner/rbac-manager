{"$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/$defs/helm-values","$defs":{"helm-values":{"type":"object","properties":{"additionalStaticClients":{"$ref":"#/$defs/helm-values.additionalStaticClients"},"affinity":{"$ref":"#/$defs/helm-values.affinity"},"connectors":{"$ref":"#/$defs/helm-values.connectors"},"database":{"$ref":"#/$defs/helm-values.database"},"databaseCreator":{"$ref":"#/$defs/helm-values.databaseCreator"},"dex":{"$ref":"#/$defs/helm-values.dex"},"enable":{"$ref":"#/$defs/helm-values.enable"},"enablePasswordDb":{"$ref":"#/$defs/helm-values.enablePasswordDb"},"envsubst":{"$ref":"#/$defs/helm-values.envsubst"},"expiry":{"$ref":"#/$defs/helm-values.expiry"},"fullnameOverride":{"$ref":"#/$defs/helm-values.fullnameOverride"},"global":{"$ref":"#/$defs/helm-values.global"},"httpPort":{"$ref":"#/$defs/helm-values.httpPort"},"image":{"$ref":"#/$defs/helm-values.image"},"internalGrpcPort":{"$ref":"#/$defs/helm-values.internalGrpcPort"},"livenessProbe":{"$ref":"#/$defs/helm-values.livenessProbe"},"nameOverride":{"$ref":"#/$defs/helm-values.nameOverride"},"nodeSelector":{"$ref":"#/$defs/helm-values.nodeSelector"},"oauth2":{"$ref":"#/$defs/helm-values.oauth2"},"podAnnotations":{"$ref":"#/$defs/helm-values.podAnnotations"},"podSecurityContext":{"$ref":"#/$defs/helm-values.podSecurityContext"},"replicaCount":{"$ref":"#/$defs/helm-values.replicaCount"},"resources":{"$ref":"#/$defs/helm-values.resources"},"securityContext":{"$ref":"#/$defs/helm-values.securityContext"},"staticPasswords":{"$ref":"#/$defs/helm-values.staticPasswords"},"tolerations":{"$ref":"#/$defs/helm-values.tolerations"},"version":{"$ref":"#/$defs/helm-values.version"},"volumeMounts":{"$ref":"#/$defs/helm-values.volumeMounts"},"volumes":{"$ref":"#/$defs/helm-values.volumes"}},"additionalProperties":false},"helm-values.additionalStaticClients":{"description":"Optional additional static clients registered in Dex by default. Alternatively, clients may be added through the gRPC API. For more information, see [Scopes and Claims](https://dexidp.io/docs/configuration/custom-scopes-claims-clients/).","type":"array","items":{}},"helm-values.affinity":{"description":"A Kubernetes Affinity, if required.\nFor more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node).\n\nFor example:\naffinity:\n  nodeAffinity:\n   requiredDuringSchedulingIgnoredDuringExecution:\n     nodeSelectorTerms:\n     - matchExpressions:\n       - key: foo.bar.com/role\n         operator: In\n         values:\n         - master","type":"object"},"helm-values.connectors":{"description":"Connectors are used to authenticate users against upstream identity providers. Dex has a pre-configured built-in local connector, acting as a “virtual” identity provider. It can be utilized by enabling the\n`enablePasswordDb` flag and setting 'local' to `.oauth2.passwordConnector`.\nFor more information, see [Connectors](https://dexidp.io/docs/connectors/) and [Builtin Connector](https://dexidp.io/docs/connectors/local/).","type":"array","items":{}},"helm-values.database":{"type":"object","properties":{"database":{"$ref":"#/$defs/helm-values.database.database"}},"additionalProperties":false},"helm-values.database.database":{"description":"The database name for storing the dex-server data.","type":"string","default":"dex"},"helm-values.databaseCreator":{"type":"object","properties":{"image":{"$ref":"#/$defs/helm-values.databaseCreator.image"}},"additionalProperties":false},"helm-values.databaseCreator.image":{"type":"object","properties":{"pullPolicy":{"$ref":"#/$defs/helm-values.databaseCreator.image.pullPolicy"},"repository":{"$ref":"#/$defs/helm-values.databaseCreator.image.repository"}},"additionalProperties":false},"helm-values.databaseCreator.image.pullPolicy":{"description":"Kubernetes imagePullPolicy on Deployment.","type":"string","default":"IfNotPresent"},"helm-values.databaseCreator.image.repository":{"description":"The container image name.","type":"string","default":"public.ecr.aws/cloudnatix/llmariner/database-creator"},"helm-values.dex":{"description":"Additional environment variables for the dex container.","type":"object"},"helm-values.enable":{"description":"This field can be used as a condition when using it as a dependency. This definition is only here as a placeholder such that it is included in the json schema.","type":"boolean"},"helm-values.enablePasswordDb":{"description":"Specify whether to enable the password database. It's a \"virtual\" connector that stores login credentials in Dex's store.","type":"boolean","default":true},"helm-values.envsubst":{"type":"object","properties":{"image":{"$ref":"#/$defs/helm-values.envsubst.image"}},"additionalProperties":false},"helm-values.envsubst.image":{"type":"object","properties":{"pullPolicy":{"$ref":"#/$defs/helm-values.envsubst.image.pullPolicy"},"repository":{"$ref":"#/$defs/helm-values.envsubst.image.repository"}},"additionalProperties":false},"helm-values.envsubst.image.pullPolicy":{"description":"Kubernetes imagePullPolicy on Deployment.","type":"string","default":"IfNotPresent"},"helm-values.envsubst.image.repository":{"description":"The container image name.","type":"string","default":"public.ecr.aws/cloudnatix/llmariner/envsubst"},"helm-values.expiry":{"description":"Optional expiration configuration for tokens, signing keys, etc. For more information, see [Tokens](https://dexidp.io/docs/configuration/tokens/).\n\nFor Example:\nexpiry:\n  deviceRequests: \"5m\"\n  signingKeys: \"6h\"\n  idTokens: \"24h\"\n  refreshTokens:\n    disableRotation: false\n    reuseInterval: \"3s\"\n    validIfNotUsedFor: \"2160h\" # 90 days\n    absoluteLifetime: \"3960h\" # 165 days","type":"object"},"helm-values.fullnameOverride":{"description":"Override the \"dex-server.fullname\" value. This value is used as part of most of the names of the resources created by this Helm chart.","type":"string"},"helm-values.global":{"description":"Global values shared across all (sub)charts","type":"object","properties":{"database":{"$ref":"#/$defs/helm-values.global.database"},"databaseSecret":{"$ref":"#/$defs/helm-values.global.databaseSecret"},"ingress":{"$ref":"#/$defs/helm-values.global.ingress"}}},"helm-values.global.database":{"type":"object","properties":{"createDatabase":{"$ref":"#/$defs/helm-values.global.database.createDatabase"},"host":{"$ref":"#/$defs/helm-values.global.database.host"},"originalDatabase":{"$ref":"#/$defs/helm-values.global.database.originalDatabase"},"port":{"$ref":"#/$defs/helm-values.global.database.port"},"ssl":{"$ref":"#/$defs/helm-values.global.database.ssl"},"username":{"$ref":"#/$defs/helm-values.global.database.username"}}},"helm-values.global.database.createDatabase":{"description":"Specify whether to create the database if it does not exist.","type":"boolean","default":true},"helm-values.global.database.host":{"description":"The database host name.","type":"string","default":"postgres"},"helm-values.global.database.originalDatabase":{"description":"Specify the original database name to connect to before creating the database. If empty, use \"template1\".","type":"string"},"helm-values.global.database.port":{"description":"The database port number.","type":"number","default":5432},"helm-values.global.database.ssl":{"type":"object","properties":{"mode":{"$ref":"#/$defs/helm-values.global.database.ssl.mode"},"rootCert":{"$ref":"#/$defs/helm-values.global.database.ssl.rootCert"}}},"helm-values.global.database.ssl.mode":{"description":"This option determines whether or with what priority a secure. SSL TCP/IP connection will be negotiated with the database. For more information, see [Database Connection Control](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-SSLMODE)","type":"string","default":"prefer"},"helm-values.global.database.ssl.rootCert":{"description":"Specify the name of a file containing SSL certificate authority\n(CA) certificate. If the file exists, the server's certificate\nwill be verified to be signed by one of these authorities. For more information, see [Database Connection Control](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-SSLROOTCERT)","type":"string"},"helm-values.global.database.username":{"description":"The database user name.","type":"string","default":"ps_user"},"helm-values.global.databaseSecret":{"type":"object","properties":{"key":{"$ref":"#/$defs/helm-values.global.databaseSecret.key"},"name":{"$ref":"#/$defs/helm-values.global.databaseSecret.name"}}},"helm-values.global.databaseSecret.key":{"description":"The key name with a password set.","type":"string","default":"password"},"helm-values.global.databaseSecret.name":{"description":"The secret name.","type":"string","default":"postgres"},"helm-values.global.ingress":{"type":"object","properties":{"annotations":{"$ref":"#/$defs/helm-values.global.ingress.annotations"},"controllerUrl":{"$ref":"#/$defs/helm-values.global.ingress.controllerUrl"},"host":{"$ref":"#/$defs/helm-values.global.ingress.host"},"ingressClassName":{"$ref":"#/$defs/helm-values.global.ingress.ingressClassName"},"tls":{"$ref":"#/$defs/helm-values.global.ingress.tls"}}},"helm-values.global.ingress.annotations":{"description":"Optional additional annotations to add to the Ingress.","type":"object"},"helm-values.global.ingress.controllerUrl":{"description":"The URL of the ingress controller that can be accessed from outside the Kubernetes cluster. The dex-server use this for the issuer and redirect URL.","type":"string","default":"http://localhost:8080"},"helm-values.global.ingress.host":{"description":"If provided, this value will be added to each rule of every Ingress","type":"string"},"helm-values.global.ingress.ingressClassName":{"description":"The Ingress class name.","type":"string","default":"kong"},"helm-values.global.ingress.tls":{"description":"If specified, the API accessed via Ingress will be enabled for TLS. For more information, see [Enable TLS](https://llmariner.ai/docs/setup/install/single_cluster_production/#optional-enable-tls).\n\nFor example:\ntls:\n  hosts:\n  - api.llm.mydomain.com\n  secretName: api-tls","type":"object"},"helm-values.httpPort":{"description":"The HTTP port number for the public service.","type":"number","default":5556},"helm-values.image":{"type":"object","properties":{"pullPolicy":{"$ref":"#/$defs/helm-values.image.pullPolicy"},"repository":{"$ref":"#/$defs/helm-values.image.repository"},"tag":{"$ref":"#/$defs/helm-values.image.tag"}},"additionalProperties":false},"helm-values.image.pullPolicy":{"description":"Kubernetes imagePullPolicy on Deployment.","type":"string","default":"IfNotPresent"},"helm-values.image.repository":{"description":"The container image name.","type":"string","default":"dexidp/dex"},"helm-values.image.tag":{"description":"The container image tag.","type":"string","default":"v2.39.1-distroless"},"helm-values.internalGrpcPort":{"description":"The GRPC port number for the internal service.","type":"number","default":8082},"helm-values.livenessProbe":{"type":"object","properties":{"enabled":{"$ref":"#/$defs/helm-values.livenessProbe.enabled"},"failureThreshold":{"$ref":"#/$defs/helm-values.livenessProbe.failureThreshold"},"initialDelaySeconds":{"$ref":"#/$defs/helm-values.livenessProbe.initialDelaySeconds"},"periodSeconds":{"$ref":"#/$defs/helm-values.livenessProbe.periodSeconds"},"successThreshold":{"$ref":"#/$defs/helm-values.livenessProbe.successThreshold"},"timeoutSeconds":{"$ref":"#/$defs/helm-values.livenessProbe.timeoutSeconds"}},"additionalProperties":false},"helm-values.livenessProbe.enabled":{"description":"Specify whether to enable the liveness probe.","type":"boolean","default":true},"helm-values.livenessProbe.failureThreshold":{"description":"After a probe fails `failureThreshold` times in a row, Kubernetes considers that the overall check has failed: the container is not ready/healthy/live.","type":"number","default":5},"helm-values.livenessProbe.initialDelaySeconds":{"description":"Number of seconds after the container has started before startup, liveness or readiness probes are initiated.","type":"number","default":3},"helm-values.livenessProbe.periodSeconds":{"description":"How often (in seconds) to perform the probe. Default to 10 seconds.","type":"number","default":10},"helm-values.livenessProbe.successThreshold":{"description":"Minimum consecutive successes for the probe to be considered successful after having failed.","type":"number","default":1},"helm-values.livenessProbe.timeoutSeconds":{"description":"Number of seconds after which the probe times out.","type":"number","default":3},"helm-values.nameOverride":{"description":"Override the \"dex-server.name\" value, which is used to annotate some of the resources that are created by this Chart (using \"app.kubernetes.io/name\").","type":"string"},"helm-values.nodeSelector":{"description":"The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with matching labels. For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).","type":"object"},"helm-values.oauth2":{"type":"object","properties":{"passwordConnector":{"$ref":"#/$defs/helm-values.oauth2.passwordConnector"},"responseTypes":{"$ref":"#/$defs/helm-values.oauth2.responseTypes"}},"additionalProperties":false},"helm-values.oauth2.passwordConnector":{"type":"object","properties":{"enable":{"$ref":"#/$defs/helm-values.oauth2.passwordConnector.enable"},"value":{"$ref":"#/$defs/helm-values.oauth2.passwordConnector.value"}},"additionalProperties":false},"helm-values.oauth2.passwordConnector.enable":{"description":"Specify whether to enable the password connector.","type":"boolean","default":true},"helm-values.oauth2.passwordConnector.value":{"description":"Specify the connector name for password grants.","type":"string","default":"local"},"helm-values.oauth2.responseTypes":{"description":"Configure the desired auth flow. If no response types are supplied this value defaults to \"code\".","type":"array","default":["code"],"items":{}},"helm-values.podAnnotations":{"description":"Optional additional annotations to add to the Deployment Pods.","type":"object"},"helm-values.podSecurityContext":{"description":"Security Context for the dex-server pod.\nFor more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).","type":"object","default":{"fsGroup":2000}},"helm-values.replicaCount":{"description":"The number of replicas for the dex-server Deployment.","type":"number","default":1},"helm-values.resources":{"description":"Resources to provide to the dex-server pod.\nFor more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-Containers/).\n\nFor example:\nrequests:\n  cpu: 10m\n  memory: 32Mi","type":"object","default":{"limits":{"cpu":"250m"},"requests":{"cpu":"250m","memory":"500Mi"}}},"helm-values.securityContext":{"description":"Security Context for the dex-server container.\nFor more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).","type":"object","default":{"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000}},"helm-values.staticPasswords":{"description":"If this option isn't chosen users may be added through the gRPC API. A static list of passwords for the password connector. Alternatively, passwords my be added/updated through the gRPC API. For more information, see [Scopes and Claims](https://dexidp.io/docs/configuration/custom-scopes-claims-clients/).\n\nFor Example:\nstaticPasswords:\n- email: my-email@example.com\n  # The hasshed password string.\n  # Example: $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)\n  hash: \"$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W\"\n  username: my-name\n  userID: my-id","type":"array","items":{}},"helm-values.tolerations":{"description":"A list of Kubernetes Tolerations, if required.\nFor more information, see [Taints and Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/).\n\nFor example:\ntolerations:\n- key: foo.bar.com/role\n  operator: Equal\n  value: master\n  effect: NoSchedule","type":"array","items":{}},"helm-values.version":{"description":"Override the container image tag for databaseCreator and envsubst to deploy by setting this variable. If no value is set, the chart's appVersion will be used.","type":"string"},"helm-values.volumeMounts":{"description":"Additional volume mounts to add to the dex-server container. For more information, see [Volumes](https://kubernetes.io/docs/concepts/storage/volumes/).","type":"array","items":{}},"helm-values.volumes":{"description":"Additional volumes to add to the dex-server pod.\nFor more information, see [Volumes](https://kubernetes.io/docs/concepts/storage/volumes/).","type":"array","items":{}}}}
