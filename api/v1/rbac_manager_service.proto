syntax = "proto3";

package llmariner.rbac.server.v1;

option go_package = "github.com/llmariner/rbac-manager/api/v1";

message AuthorizeRequest {
  string token = 1;
  string access_resource = 2;
  string capability = 3;
  string organization_id = 4;
  string project_id = 5;
}

message AuthorizeResponse {
  bool authorized = 1;

  User user = 2;
  Organization organization = 3;
  Project project = 4;
  string tenant_id = 5;

  // api_key_id is the id of the api key used to authorize the request. It is only set if the request was authorized using an api key.
  string api_key_id = 6;
  
  // indicates whether the API key used for authorization is excluded from rate limiting
  bool excluded_from_rate_limiting = 7;
}

message AuthorizeWorkerRequest {
  string token = 1;
}

message AuthorizeWorkerResponse {
  bool authorized = 1;

  Cluster cluster = 2;
  string tenant_id = 3;
}

message User {
  string id = 1;
  string internal_id = 2;
}

message Organization {
  string id = 1;
  string title = 2;
}

message Project {
  string id = 1;
  string title = 3;

  message AssignedKubernetesEnv {
    string cluster_id = 1;
    string cluster_name = 3;
    string namespace = 2;
  }
  repeated AssignedKubernetesEnv assigned_kubernetes_envs = 2;
}

message Cluster {
  string id = 1;
  string name = 2;
}

service RbacInternalService {
  rpc Authorize(AuthorizeRequest) returns (AuthorizeResponse);

  // AuthorizeWorker authorizes requests from worker clusters.
  rpc AuthorizeWorker(AuthorizeWorkerRequest) returns (AuthorizeWorkerResponse);
}
